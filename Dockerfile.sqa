# Use Node.js as the base image
FROM node:20.2.0-alpine3.18

RUN apk update && apk add --no-cache python3 make g++ xdg-utils

# Set the working directory
WORKDIR /usr/src/app/vucar-server

# Install the Nest CLI globally
RUN yarn global add @nestjs/cli

# Copy package.json and yarn.lock to the working directory
COPY package.json yarn.lock ./

# Install project dependencies
RUN yarn install

# ARG VNPAY_CONFIG
# ARG VUCAR_KEY_CONFIG
# ARG OAUTH_KEY_CONFIG
# RUN echo "$VNPAY_CONFIG" > ./src/modules/order/config.json
# RUN echo "$VUCAR_KEY_CONFIG" > ./vucar-key.json
# RUN echo "$OAUTH_KEY_CONFIG" > ./oauth2.keys.json
# Copy the rest of the application code to the working directory
COPY . .

RUN npx prisma generate
RUN npx prisma generate --schema=./prisma-second/schema.prisma
# Build the NestJS project
RUN yarn build

# RUN curl -sSL https://sdk.cloud.google.com | bash && \
#     exec -l $SHELL && \
#     echo "source /root/google-cloud-sdk/path.bash.inc" >> ~/.bashrc && \
#     echo "source /root/google-cloud-sdk/completion.bash.inc" >> ~/.bashrc

# RUN gcloud auth login --cred-file /dev/stdin  <<<"$GOOGLE_APPLICATION_CREDENTIALS" --quiet
# Copy entrypoint script into the image
COPY entrypoint.staging.sh /entrypoint.sh

# Make entrypoint script executable
RUN chmod +x /entrypoint.sh

# Set the entrypoint script as the entrypoint for this Docker image
ENTRYPOINT ["/entrypoint.sh"]
