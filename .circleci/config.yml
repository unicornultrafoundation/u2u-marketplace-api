version: 2.1

orbs:
  node: circleci/node@5.1.0

executors:
  my-executor:
    machine: true
    # docker:
    #   - image: cimg/go:1.13
    #     user: root
    resource_class: vucarvn/vucar-staging-build-server-2
  circleci-executor:
    machine: true
    resource_class: medium
  prod-executor:
    machine: true
    resource_class: vucarvn/vucar-prod-build-server

commands:
  create-config:
    description: 'Create config file'
    steps:
      - run:
          name: Create VNPAY Config file
          command: echo "$VNPAY_CONFIG" > ./src/modules/order/config.json
      - run:
          name: Create Vucar key Config file
          command: echo "$VUCAR_KEY_CONFIG" > ./vucar-key.json
      - run:
          name: Create OAUTH key Config file
          command: echo "$OAUTH_KEY_CONFIG" > ./oauth2.keys.json
      - run:
          name: Create GCP key Config file
          command: echo "$GOOGLE_APPLICATION_CREDENTIALS" > ./gcp.json
      # - run:
      #     name: Set service account for runner
      #     command: |
      #               sudo mkdir -p /etc/systemd/system/docker.service.d
      #               echo "[Service]" | sudo tee /etc/systemd/system/docker.service.d/docker-service-override.conf
      #               echo "Environment=\"GOOGLE_APPLICATION_CREDENTIALS=/home/circleci/project/gcp.json\"" | sudo tee -a /etc/systemd/system/docker.service.d/docker-service-override.conf
      #               sudo systemctl daemon-reload
      #               sudo systemctl restart docker

jobs:
  test-case:
    executor: circleci-executor
    steps:
      - checkout
      - create-config
      - run: |
          yarn add eslint
          npx prisma generate
          npx prisma generate --schema=./prisma-second/schema.prisma
          yarn lint
  deploy_staging:
    executor: my-executor
    steps:
      - run:
          name: Add gh to know host
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            sudo setfacl --modify user:circleci:rw /var/run/docker.sock
      - checkout
      # - node/install-packages:
      #     pkg-manager: yarn  # Use npm if you're using npm
      - run:
          name: Set Environment Variables
          command: |
            echo 'export DATABASE_URL=$DATABASE_URL_SQA' >> $BASH_ENV
            echo 'export SECOND_DATABASE_URL=$SECOND_DATABASE_URL' >> $BASH_ENV
            # echo 'export GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS' >> $BASH_ENV
            echo 'export GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID' >> $BASH_ENV
            echo 'export GOOGLE_SECRET=$GOOGLE_SECRET' >> $BASH_ENV
            echo 'export ACCESS_KEY=$ACCESS_KEY' >> $BASH_ENV
            echo 'export SECRET=$SECRET' >> $BASH_ENV
            echo 'export GOOGLE_EMAIL_USERNAME=$GOOGLE_EMAIL_USERNAME' >> $BASH_ENV
            echo 'export GOOGLE_EMAIL_PASSWORD=$GOOGLE_EMAIL_PASSWORD' >> $BASH_ENV
            echo 'export REDIS_CLUSTER_NODE=$REDIS_CLUSTER_NODE' >> $BASH_ENV
            echo 'export REDIS_CLUSTER=$REDIS_CLUSTER' >> $BASH_ENV
            echo 'export REDIS_PASSWORD=$REDIS_PASSWORD' >> $BASH_ENV
            echo 'export REDIS_PREFIX=$REDIS_PREFIX' >> $BASH_ENV
            echo 'export REDISDB_HOST=$REDISDB_HOST' >> $BASH_ENV
            echo 'export REDISDB_PORT=$REDISDB_PORT' >> $BASH_ENV
            echo 'export BUCKET_NAME=$BUCKET_NAME' >> $BASH_ENV
            echo 'export CDN_URL=$CDN_URL' >> $BASH_ENV
            echo 'export REBRANDER_UPLOAD_KEY=$REBRANDER_UPLOAD_KEY' >> $BASH_ENV
            echo 'export WEBHOOK_API_KEY=$WEBHOOK_API_KEY' >> $BASH_ENV
            echo 'export REBRANDER_URL=$REBRANDER_URL' >> $BASH_ENV
            echo 'export PLAUSIBLE_URL=$PLAUSIBLE_URL' >> $BASH_ENV
            echo 'export PLAUSIBLE_TOKEN=$PLAUSIBLE_TOKEN' >> $BASH_ENV
            echo 'export VAP_URL=$VAP_URL' >> $BASH_ENV
            echo 'export CASSO_KEY=$CASSO_KEY' >> $BASH_ENV
            echo 'export ZALO_APP_ID=$ZALO_APP_ID' >> $BASH_ENV
            echo 'export ZALO_SECRET_KEY=$ZALO_SECRET_KEY' >> $BASH_ENV
      - create-config
      # - run:
      #     name: Authenticate to GCP
      #     command: gcloud auth activate-service-account --key-file=/home/circleci/project/gcp.json

      - run:
          name: Authenticate to GCP
          command: |
            gcloud auth activate-service-account --key-file=./gcp.json
            gcloud auth list
      - run:
          name: Configure Docker Client of Gcloud
          command: |
            gcloud auth configure-docker asia-southeast1-docker.pkg.dev
      # push current image to registry
      - run:
          name: Push current version to registry
          command: |
            # docker tag vucar-backend-prisma-ext-server:latest asia-southeast1-docker.pkg.dev/web-team-380004/vucar-backend/vucar-server:old
            docker push asia-southeast1-docker.pkg.dev/web-team-380004/vucar-backend/vucar-server:old
      - run:
          name: Deploy to Staging
          command: |
            docker-compose -f docker-compose.sqa.yaml down
            docker-compose -f docker-compose.sqa.yaml up -d --build

        # on fail: take that image back and run again
      - run:
          name: Revert on fail
          when: on_fail
          command: |
            docker pull asia-southeast1-docker.pkg.dev/web-team-380004/vucar-backend/vucar-server:old
            docker-compose -f docker-compose.sqa.yaml up -d
  deploy_production:
    executor: my-executor
    steps:
      - run:
          name: Add gh to know host
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            sudo setfacl --modify user:circleci:rw /var/run/docker.sock
      - checkout
      - run:
          name: Set Environment Variables
          command: |
            echo 'export DATABASE_URL=$DATABASE_URL' >> $BASH_ENV
            echo 'export SECOND_DATABASE_URL=$SECOND_DATABASE_URL' >> $BASH_ENV
            # echo 'export GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS' >> $BASH_ENV
            echo 'export GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID' >> $BASH_ENV
            echo 'export GOOGLE_SECRET=$GOOGLE_SECRET' >> $BASH_ENV
            echo 'export ACCESS_KEY=$ACCESS_KEY' >> $BASH_ENV
            echo 'export SECRET=$SECRET' >> $BASH_ENV
            echo 'export GOOGLE_EMAIL_USERNAME=$GOOGLE_EMAIL_USERNAME' >> $BASH_ENV
            echo 'export GOOGLE_EMAIL_PASSWORD=$GOOGLE_EMAIL_PASSWORD' >> $BASH_ENV
            echo 'export REDIS_CLUSTER_NODE=$REDIS_CLUSTER_NODE' >> $BASH_ENV
            echo 'export REDIS_CLUSTER=$REDIS_CLUSTER' >> $BASH_ENV
            echo 'export REDIS_PASSWORD=$REDIS_PASSWORD' >> $BASH_ENV
            echo 'export REDIS_PREFIX=$REDIS_PREFIX' >> $BASH_ENV
            echo 'export REDISDB_HOST=$REDISDB_HOST' >> $BASH_ENV
            echo 'export REDISDB_PORT=$REDISDB_PORT' >> $BASH_ENV
            echo 'export BUCKET_NAME=$BUCKET_NAME' >> $BASH_ENV
            echo 'export CDN_URL=$CDN_URL' >> $BASH_ENV
            echo 'export REBRANDER_UPLOAD_KEY=$REBRANDER_UPLOAD_KEY' >> $BASH_ENV
            echo 'export WEBHOOK_API_KEY=$WEBHOOK_API_KEY' >> $BASH_ENV
            echo 'export REBRANDER_URL=$REBRANDER_URL' >> $BASH_ENV
            echo 'export PLAUSIBLE_URL=$PLAUSIBLE_URL' >> $BASH_ENV
            echo 'export PLAUSIBLE_TOKEN=$PLAUSIBLE_TOKEN' >> $BASH_ENV
            echo 'export VAP_URL=$VAP_URL' >> $BASH_ENV
            echo 'export CASSO_KEY=$CASSO_KEY' >> $BASH_ENV
            echo 'export ZALO_APP_ID=$ZALO_APP_ID' >> $BASH_ENV
            echo 'export ZALO_SECRET_KEY=$ZALO_SECRET_KEY' >> $BASH_ENV
      - create-config
      - run:
          name: Authenticate to GCP
          command: |
            gcloud auth activate-service-account --key-file=./gcp.json
            gcloud auth list
      - run:
          name: Configure Docker Client of Gcloud
          command: |
            gcloud auth configure-docker asia-southeast1-docker.pkg.dev
      - run:
          name: Build on Staging
          command: |
            docker-compose build
            docker push asia-southeast1-docker.pkg.dev/web-team-380004/vucar-backend/vucar-server:latest
  run_on_prod:
    executor: prod-executor
    steps:
      # - run:
      #     name: Add gh to know host
      #     command: |
      #               ssh-keyscan github.com >> ~/.ssh/known_hosts
      - checkout
      - run:
          name: Set Environment Variables
          command: |
            echo 'export DATABASE_URL=$DATABASE_URL' >> $BASH_ENV
            echo 'export SECOND_DATABASE_URL=$SECOND_DATABASE_URL' >> $BASH_ENV
            # echo 'export GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS' >> $BASH_ENV
            echo 'export GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID' >> $BASH_ENV
            echo 'export GOOGLE_SECRET=$GOOGLE_SECRET' >> $BASH_ENV
            echo 'export ACCESS_KEY=$ACCESS_KEY' >> $BASH_ENV
            echo 'export SECRET=$SECRET' >> $BASH_ENV
            echo 'export GOOGLE_EMAIL_USERNAME=$GOOGLE_EMAIL_USERNAME' >> $BASH_ENV
            echo 'export GOOGLE_EMAIL_PASSWORD=$GOOGLE_EMAIL_PASSWORD' >> $BASH_ENV
            echo 'export REDIS_CLUSTER_NODE=$REDIS_CLUSTER_NODE' >> $BASH_ENV
            echo 'export REDIS_CLUSTER=$REDIS_CLUSTER' >> $BASH_ENV
            echo 'export REDIS_PASSWORD=$REDIS_PASSWORD' >> $BASH_ENV
            echo 'export REDIS_PREFIX=$REDIS_PREFIX' >> $BASH_ENV
            echo 'export REDISDB_HOST=$REDISDB_HOST' >> $BASH_ENV
            echo 'export REDISDB_PORT=$REDISDB_PORT' >> $BASH_ENV
            echo 'export BUCKET_NAME=$BUCKET_NAME' >> $BASH_ENV
            echo 'export CDN_URL=$CDN_URL' >> $BASH_ENV
            echo 'export REBRANDER_UPLOAD_KEY=$REBRANDER_UPLOAD_KEY' >> $BASH_ENV
            echo 'export WEBHOOK_API_KEY=$WEBHOOK_API_KEY' >> $BASH_ENV
            echo 'export REBRANDER_URL=$REBRANDER_URL' >> $BASH_ENV
            echo 'export PLAUSIBLE_URL=$PLAUSIBLE_URL' >> $BASH_ENV
            echo 'export PLAUSIBLE_TOKEN=$PLAUSIBLE_TOKEN' >> $BASH_ENV
            echo 'export VAP_URL=$VAP_URL' >> $BASH_ENV
            echo 'export CASSO_KEY=$CASSO_KEY' >> $BASH_ENV
            echo 'export ZALO_APP_ID=$ZALO_APP_ID' >> $BASH_ENV
            echo 'export ZALO_SECRET_KEY=$ZALO_SECRET_KEY' >> $BASH_ENV
      - run:
          name: Create GCP key Config file
          command: echo "$GOOGLE_APPLICATION_CREDENTIALS" > ./gcp.json
      - run:
          name: Authenticate to GCP
          command: |
            gcloud auth activate-service-account --key-file=./gcp.json
            gcloud auth list
      - run:
          name: Configure Docker Client of Gcloud
          command: |
            gcloud auth configure-docker asia-southeast1-docker.pkg.dev
      - run:
          name: Pull and run on production
          command: |
            docker pull asia-southeast1-docker.pkg.dev/web-team-380004/vucar-backend/vucar-server:latest
            docker-compose up -d

workflows:
  deploy_workflow:
    jobs:
      - test-case:
          filters:
            branches:
              ignore:
                - staging
                - master
      - deploy_staging:
          filters:
            branches:
              only:
                - staging
      - deploy_production:
          filters:
            branches:
              only:
                - master
      - run_on_prod:
          requires:
            - deploy_production
